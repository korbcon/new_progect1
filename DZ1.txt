Задание 3 
1: int(3)  - число 3, тип - целое.
2: float(0.33333333333333) - число с плавающей точкой, не точное.
3: int(60) - число 60, целое. 
При сложении строки и целого числа, строка преобразуется в число. Насколько я понял, экспериментируя, путём "откидывания" всех не числовых значений, идущих после числа. Если к строке прибавляется целое число (int), то строка преобразуется в целое, и результат тоже будет целым числом. Если строка преобразуется в число с плавающей точкой, то и результат сложения тоже будет float, вне зависимости от второго слагаемого.
Таким образом получаем 40+20=60.

Вопрос: пытался вывести в поток через echo комментарий, содержащий апострофы. Выпала ошибка. Пришлось заменить их на левые апострофы (см. код, строка 18, 46, 51, 56 ), чтобы как можно ближе подходило по смыслу. Каким образом можно вывести текст, содержащий апострофы именно в таком виде?

4:  int(2) - число 2, тип-целое.
Целочисленный  (отсюда-тип int) остаток  от деления 18 на 4. В нашем случае получаем: 18%4=4*4+2(остаток).  

Задание 4 Результатом выражения присваивания является присвоенное значение.

Задание 5
1: Выражение 1==1.0 возвращает bool(true) После преобразования типов получим два целых числа, которые будут равны.
2: Выражение 1===1.0 возвращает bool(false) Точное (тождественное)  сравнение с учётом типа данных. Слева int,  справа float. Не одно и то же!
3: Выражение `02` == 2 возвращает bool(true) Строка слева будет преобразована в число 2, которое равно числу 2 справа.
4: Выражение `02` === 2 возвращает bool(false) Слева тип строка, справа-число (Int). Не равны.
5: Выражение `02` == `2` возвращает bool(true) Строки преобразуются в числа, и сравниваются как числа. Получаем 2=2, что есть true.

Задание 6
$x = true xor true;
var_dump($x); 
Операция "присваивание" является приоритетной, по отношению к операции "исключающее ИЛИ". Переменной "x" будет присвоено значение true.
 

